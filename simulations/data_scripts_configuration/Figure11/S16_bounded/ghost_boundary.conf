# ***************************************************************************
# *
# *  Copyright (C) 2013-2016 University of Dundee
# *  All rights reserved.
# *
# *  This file is part of SAMoS (Soft Active Matter on Surfaces) program.
# *
# *  SAMoS is free software; you can redistribute it and/or modify
# *  it under the terms of the GNU General Public License as published by
# *  the Free Software Foundation; either version 2 of the License, or
# *  (at your option) any later version.
# *
# *  SAMoS is distributed in the hope that it will be useful,
# *  but WITHOUT ANY WARRANTY; without even the implied warranty of
# *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *  GNU General Public License for more details.
# *
# *  You should have received a copy of the GNU General Public License
# *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
# *
# *****************************************************************************

# All runtime messages will be sent to file messages.msg
messages messages.msg
config configuration {type = json}

# box is cubic with size 100x100x10 
box fixed { lx = 100.0;  ly = 100.0;  lz = 10.0 }

# We read in particle positions 
input bounded.input

# Read boundary connectivity
# form of the file. 
# # comments/headers
# edge_id particle_id_1 particle_id_2
read_cell_boundary bounded.boundary

# Set neighbour list paramters for tissue simulations (please see SAMoS documentation for details)  
nlist { rcut = 2.4; pad = 0.5; build_faces; max_perimeter = 30.0; max_edge_len = 20.0; triangulation; }

# We constrain all particles to move only on the xy plane.
constraint plane { unlimited  }

# Cell potential
# K is the area term stiffness, gamma is the perimeter stiffness 
# lambda is the junction tension
#
pair_potential vp { K = 1.0; gamma = 1.0; lambda = -6.0; }
# phase in the vertex model forces based on particle age over a time of 0.2
#pair_potential vp { K = 1.0; gamma = 0.1; lambda = -0.60; phase_in=linear; min_val=0.; max_val=0.2 }

# line tension only applies to the particles that are on the boundary
pair_potential line_tension { lambda = 0.8; }
pair_potential boundary_bending { kappa = 0.2; }

# Soft repulsion at reasonable distance
pair_potential soft { k = 100.0; a = 1.0; phase_in=linear; min_val=0.; max_val=0.5 }

# frequent logging of simple metrics
log cell.log { freq = 100; size; area; avg_perim; vp_energy }

# .vtp dumps for data analysis and paraview visualisation 
dump cell { type=vtp; start=0; freq=1000; multi; include_mesh }
dump cell_dual { type=vtp; start=0; freq=1000; multi; dual }
# text dumps for data analysis 
dump cell { type=full; start=0; freq=1000; multi; id; tp; radius; boundary; coordinate; velocity; force; director; area; cell_area; cell_perim; in_tissue; keys }
# faces files can be used to reconstruct the triangulation and the mesh in python for analysis.
dump faces { type=face; start=0; freq=1000; multi; }


# Population growth dynamics
# If death_rate is non-zero then cells may die with probability based on their age.
# Boundary particles won't divide or die
population cell { group = internal; division_rate = 0.01; freq = 25; max_area = 3.0; growth_rate = 0.004; death_rate = 0.0 }

# Running the simulation
#
timestep 0.004

# Open boundaries
integrator brownian {group= tissue; seed = 1;  nu = 0.1; mu = 1.0;  v0 = 0.0 }


run 500000



